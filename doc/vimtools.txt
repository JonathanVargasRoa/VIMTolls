*vimtools.txt*                         swiss army knife plugin for (Neo)vim
                                                      *VimTools* *:vimools*


                               ╔═╦═╦═╗
                        ╔════╗ ║║║║║╔╝
                        ║╔╗╔╗║ ║║║║║╚╗
                        ╚╝║║╚╝ ║╠═╩╩═╝
                          ║╠═╦═╣╚╦═╦╦═╦╗╔═╦═╦╦╗
                          ║║╩╣═╣║║║║║╬║╚╣╬║╬║║║
                          ╚╩═╩═╩╩╩╩═╩═╩═╩═╬╗╠╗║
                                          ╚═╩═╝

============================================================================
CONTENTS                                                *VimToolsContents*

    1. Intro ...................... |VimToolsIntro|
    2. Commands .................. |VimToolsCommands|
    3. Mappings ................... |VimToolsMappings|
    4. Configuration .............. |VimToolsConfig|
        4.1 VimTools_activate ......... |VimToolsConfig_activate|
        4.2 VimTools_map .............. |VimToolsConfig_map|
    5. License .................... |VimToolsLicense|
    6. Bugs ....................... |VimToolsBugs|
    7. Contributing ............... |VimToolsContributing|
    8. Changelog .................. |VimToolsChangelog|
    9. Credits .................... |VimToolsCredits|

============================================================================
1. Intro                                                     *VimToolsIntro*

The swiss army knife plugin for (Neo)vim
vimtools is a tool to complement your editor favorite text / code
vim, vi, nvim, Gvim or MacVim.

vimtools is a set of functions and settings that will make it easy for you
life. You are the one who decides what function or command is executed either
automatically or by calling through the cmd of vim / nvim.
That is why all the variables are available
for you set the vimtools to your liking.

vimtools features:

Maximize the current window to have a more extended view of the information
Spell administrator
Document assistant for Vimscript
Rapid access to your VIMRC or to your init.vim
State Rule
Automatic directories for spell, backup copies, folding and others
Mathemodus
Others

============================================================================
2. Commands                                               *VimToolsCommands*
                                                    *VimToolsSpellMorseMaps*
When SpellMorse is activated,
then you can make movements with the following keys.

Input -> Output
mm -> menu (z=)
e -> next word (]s)
n -> next word (]s)
N -> previus word ([S)
b -> previus word ([S)
a -> add word (zg)
A -> quit word (zug)
w -> quit bad word (zw)
W -> undo quit bad word (zuw)
, -> selection first option (1z=)
. -> selection second option (2z=)
- -> selection third option (3z=)

                                                        *VimToolsSpellMorse*
Spell is a complement that is available to VIM, SpellMorse helps you from a
very easy and intuitive to use it. In normal mode, simply press <TAB> + .
Torque Aactivar the plugin and once activated you can change language with
<TAB> + ,.

You can change to the language of your preference, consultation your language
in specific here -> http://vimdoc.sourceforge.net/htmldoc/spell.html.
Once you know which will be the default language, you can
switch it by simply by modifying the word by the language of your
preference. For example:

en -> all regions
en_au -> Australia
en_ca -> Canada
en_gb -> Great Britain
en_nz -> New Zealand
en_us -> USA
de -> all German words accepted
de_de -> old and new spelling
de_19 -> old spelling
de_20 -> new spelling
de_at -> Austria
de_ch -> Switzerland

                                                        *VimToolsMatheModus*
With this plugin you can acquire mathematical unicode symbols simply
by typing the abbreviation according to your symbol.
These are the keywords added so far.

Input -> Output (INSERT MODUS)
eps -> ε
theta -> θ
kappa -> κ
pi -> π
rho -> ρ
phi -> φ
sigma -> σ
beta -> β
alpha -> α
delta -> ∆
sum -> ∑
ang -> å
Ang -> Å
sqr -> √
int -> ∫
micra -> µ
omega -> Ω
fun -> ƒ
lam -> λ


                                                        *VimToolsMaxWindows*
Enlarge and restore the current window.

                                                       *VimToolsCleanUndoDir*
                                                    *VimToolsMakeDirectories*
With this add-on you can clean the "Undo" folder with the files
that have more than 90 days of existing,
if you want them to keep the archives simply do not invoke this command.

============================================================================
3. Mappings                                               *VimToolsMappings*
Maping recommended
    >
    " on/off SpellMorse
    nnoremap <silent> <TAB>. :setlocal spell! spelllang=en \| VimToolsSpellMorseMaps<CR>
    " next language
    nnoremap <silent> <TAB>, :VimToolsSpellMorse<CR>
    " on/off MatheModus
    inoremap <silent> <TAB>m <Esc>:VimToolsMatheModus<CR>i<RIGHT>
    " on/off MaxWindows
    nnoremap <silent> <Leader>m :VimToolsMaxWindows<CR>
<

============================================================================
4. Configuration                                            *VimToolsConfig*

----------------------------------------------------------------------------
4.1 g:vimtools_loaded                              *VimToolsConfig_activate*
                                                         *g:vimtools_loaded*
" 1 = activate 0 = deactivate
let g:vimtools_loaded = 1
                                                      *g:vimtools_assistant*

let g:vimtools_assistant = 1
                                      *g:vimtools_viewdir_backupdir_undodir*

let g:vimtools_viewdir_backupdir_undodir = 1
                                                    *g:vimtools_mapsfolding*
let g:vimtools_mapsfolding = 1

                                              *g:vimtools_selfclosingbracke*
let g:vimtools_selfclosingbracke = 1

                                                          *g:vimtools_ruler*
let g:vimtools_ruler = 1

                                                     *g:vimtools_mathemodus*
let g:vimtools_mathemodus = 1

                                                    *g:vimtools_spell_morse*
let g:vimtools_spell_morse = 1

                                                   *g:vimtools_easy_comment*
let g:vimtools_easy_comment = 1


4.2 g:vimtools_map                                      *VimToolsConfig_map*
    >
    " on/off SpellMorse
    nnoremap <silent> <TAB>. :setlocal spell! spelllang=en \| VimToolsSpellMorseMaps<CR>
    " next language
    nnoremap <silent> <TAB>, :VimToolsSpellMorse<CR>
    " on/off MatheModus
    inoremap <silent> <TAB>m <Esc>:VimToolsMatheModus<CR>i<RIGHT>
    " on/off MaxWindows
    nnoremap <silent> <Leader>m :VimToolsMaxWindows<CR>
<

============================================================================
5. License                                                 *VimToolsLicense*

Released under the GNU General Public License v3.0.

============================================================================
6. Bugs                                                       *VimToolsBugs*

Before submitting a bug report, try upgrading to the latest version of the
plugin. The bug could have been fixed already.

If the problem persists, go to:

    https://github.com/mctechnology17/vimtools

Check the list of open issues and see if the problem you are facing has not
been reported already. You can add more information to the issue in case it
has. Otherwise, submit a new issue.

============================================================================
7. Contributing                                       *VimToolsContributing*

Contributions are welcomed and appreciated. Just follow the normal Github
procedure. Go to:

    https://github.com/mctechnology17/vimtools

Fork the project. Work on what you think would make it better. Send a pull
request.

============================================================================
7. Changelog                                             *VimToolsChangelog*

Refer to CHANGELOG.txt

============================================================================
9. Credits                                                 *VimToolsCredits*

Marcos - MC Technology
GitHub: https://github.com/mctechnology17
